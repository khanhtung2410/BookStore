@model Bookstore.Carts.Dto.CartDto
@using System.Security.Claims
@{
    ViewBag.Title = "My Cart";
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}
@if (Model.HasUnavailableItems)
{
    <div class="alert alert-warning alert-dismissible fade show d-flex justify-content-between align-items-center"
         role="alert">
        <strong>Notice:</strong> Some items were removed because they are no longer available.
        <button type="button"
                class="btn-close btn-close-white ms-3"
                data-bs-dismiss="alert"
                aria-label="Close"
                style="font-size: 1.2rem; opacity: 1;">
            x
        </button>
    </div>
}
<div class="container mt-5">
    <h3>@ViewBag.Title</h3>

    @if (Model.Items == null || !Model.Items.Any())
    {
        <div class="alert alert-info">
            Your cart is empty. Add some thing to it
        </div>
        <a href="@Url.Action("Index", "Books")" class="btn btn-primary">Browse Books</a>

    }
    else
    {

        <table class="table table-bordered mt-3">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Author</th>
                    <th>Format</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {

                    <tr>
                        <td>@(item.BookTitle ?? "Unknown")</td>
                        <td>@(item.BookAuthor ?? "Unknown")</td>
                        <td>@(item.BookEdition.Format)</td>
                        <td>
                            <div class="d-flex align-items-center">
                            <button class="btn btn-group-sm btn-primary btn-add-quantity">+</button>
                                <input type="hidden" name="CartItemId" value="@item.Id" />
                                <input type="number"
                                       name="NewQuantity"
                                       value="@item.Quantity"
                                       min="1"
                                       max="@(item.BookEdition?.Inventory?.StockQuantity ?? 1)"
                                       class="form-control d-inline w-50" />
                                <button class="btn btn-group-sm btn-primary btn-minus-quantity">-</button>
                            </div>
                        </td>
                        <td>@(item.BookEdition?.Inventory?.SellPrice.ToString("C0", new System.Globalization.CultureInfo("vi-VN")) ?? "0")</td>
                        <td>@((item.Quantity * (item.BookEdition?.Inventory?.SellPrice ?? 0)).ToString("C0", new System.Globalization.CultureInfo("vi-VN")))</td>
                        <td>
                            <form asp-action="RemoveItem" method="post">
                                <input type="hidden" name="CartItemId" value="@item.Id" />
                                <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            <h4 id="total-price">Total price: @Model.TotalPrice.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</h4>
        </div>
        <form asp-action="ClearCart" method="post">
            <input type="hidden" name="userId" value="@Model.UserId" />
            <button type="submit" class="btn btn-warning">Clear Cart</button>
        </form>
    }
</div>

@section Scripts {
    <script src="~/view-resources/Views/Carts/updateQuantity.js?v=@DateTime.Now.Ticks"></script>
}
