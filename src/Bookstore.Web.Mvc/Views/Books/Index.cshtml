@model Bookstore.Web.Models.Books.BookListViewModel

@{
    ViewBag.Title = "Bookstore Home";
}

<div class="container mt-5">
    <h1 class="mb-4">Books</h1>

    @if (Model.Books != null && Model.Books.Any())
    {
        <div class="list-group shadow-sm">
            @foreach (var book in Model.Books)
            {
                <div class="list-group-item list-group-item-action mb-3 rounded-3 border border-secondary">
                    <div class="row align-items-center">
                        <!-- Optional book image -->
                        <div class="col-md-2 text-center">
                            <img src="~/images/default-book.png" alt="@book.Title" class="img-fluid rounded" style="max-height: 150px;">
                        </div>

                        <div class="col-md-8">
                            <h5 class="fw-bold mb-1">@book.Title</h5>
                            <p class="mb-1 text-muted"><strong>Author:</strong> @book.Author</p>
                            <p class="mb-1"><strong>Genre:</strong> @book.Genre</p>
                        </div>

                        <div class="col-md-2 text-end">
                            <a href="@Url.Action("Detail", "Books", new { id = book.Id })" class="btn btn-primary btn-sm mb-2 w-100">
                                View Details
                            </a>
                            <a href="@Url.Action("Update", "Books", new { id = book.Id })" class="btn btn-success btn-sm w-100">
                                Update
                            </a>
                            <button type="button"
                                    class="btn btn-danger btn-sm mt-2 w-100 btn-delete-book"
                                    data-id="@book.Id"
                                    data-title="@book.Title">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Book pages" class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Books", new { page = 1 })">« First</a>
                    </li>
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Books", new { page = Model.CurrentPage - 1 })">‹ Prev</a>
                    </li>

                    @{
                        int startPage = Math.Max(1, Model.CurrentPage - 2);
                        int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);

                        if (startPage > 1)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        }

                        for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Books", new { page = i })">@i</a>
                            </li>
                        }

                        if (endPage < Model.TotalPages)
                        {
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        }
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Books", new { page = Model.CurrentPage + 1 })">Next ›</a>
                    </li>
                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Books", new { page = Model.TotalPages })">Last »</a>
                    </li>
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="alert alert-info mt-4">
            No books available.
        </div>
    }
    <!-- Hidden Delete Confirmation Modal -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow-lg">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p id="deleteBookMessage" class="mb-0">Are you sure you want to delete this book?</p>
                    <input type="hidden" id="deleteBookId" />
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger px-4" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="~/view-resources/Views/Books/deleteBook.js?v=@DateTime.Now.Ticks"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
}

